{"version":3,"sources":["webpack://@clarkwinkelmann/carving-contest/webpack/bootstrap","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/Model']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/helpers/username']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/Link']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/helpers/avatar']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/Modal']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/LinkButton']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/Page']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/helpers/punctuateSeries']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/carving-contest/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/carving-contest/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/carving-contest/./src/forum/models/Entry.ts","webpack://@clarkwinkelmann/carving-contest/./src/forum/components/PumpkinCanvas.ts","webpack://@clarkwinkelmann/carving-contest/./src/forum/states/BrushState.ts","webpack://@clarkwinkelmann/carving-contest/./src/forum/components/ParticipateModal.ts","webpack://@clarkwinkelmann/carving-contest/./src/forum/components/EntryLikesModal.ts","webpack://@clarkwinkelmann/carving-contest/./src/forum/components/ContestPage.ts","webpack://@clarkwinkelmann/carving-contest/./src/forum/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","Entry","Model","attribute","image","createdAt","transformDate","canLike","user","hasOne","likes","hasMany","apiEndpoint","this","exists","data","id","PumpkinCanvas","brush","previewContext","imageSourceCanvas","imageSourceContext","drawCanvas","drawContext","onmouseup","drawEnabled","oninit","vnode","attrs","document","createElement","width","height","getContext","Image","src","app","forum","onload","drawImage","updatePreview","startingImage","onerror","err","console","error","oncreate","addEventListener","dom","event","mouseMove","querySelector","onremove","removeEventListener","view","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","color","fillStyle","drawWithTool","onchange","canvas","toDataURL","context","fill","beginPath","shape","arc","Math","PI","stroke","toolPosition","clearRect","imageSourceData","getImageData","drawData","length","putImageData","strokeStyle","lineWidth","BrushState","translationPrefix","ParticipateModal","disabled","loading","className","title","translator","trans","checkIfDisabled","previouslyDisabled","redraw","colorChoice","colorOptions","colors","type","split","map","style","backgroundColor","onclick","colorTools","content","Button","component","icon","step","min","max","parseInt","store","createRecord","save","then","onsave","Modal","PostLikesModal","entry","Link","href","route","avatar","username","ContestPage","moreResults","entries","sort","refresh","loadResults","offset","preloadedEntries","preloadedApiDocument","Promise","resolve","find","page","results","parseResults","loadMore","push","apply","payload","links","next","likeButton","isLiked","session","some","relationships","like","splice","unshift","whoLiked","overLimit","names","a","slice","limit","count","preventDefault","modal","show","EntryLikesModal","users","punctuateSeries","participateButton","close","sortOptions","Dropdown","buttonClassName","label","keys","active","humanTime","confirm","extractText","LoadingIndicator","Page","initializers","add","models","routes","carvingContest","path","extend","IndexPage","items","LinkButton"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['common/helpers/avatar'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['forum/components/IndexPage'];","module.exports = flarum.core.compat['common/components/LinkButton'];","module.exports = flarum.core.compat['common/components/Page'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['common/helpers/humanTime'];","module.exports = flarum.core.compat['common/helpers/punctuateSeries'];","module.exports = flarum.core.compat['common/utils/extractText'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\n\nexport default class Entry extends Model {\n    name = Model.attribute('name');\n    image = Model.attribute('image');\n    createdAt = Model.attribute('createdAt', Model.transformDate);\n    canLike = Model.attribute('canLike');\n\n    user = Model.hasOne('user') as any as (() => User);\n    likes = Model.hasMany('likes') as any as (() => User[] | false);\n\n    apiEndpoint() {\n        // @ts-ignore Flarum typings do not include .id\n        return '/carving-contest/entries' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import {ClassComponent, Vnode, VnodeDOM} from 'mithril';\nimport app from 'flarum/forum/app';\nimport BrushState from '../states/BrushState';\n\ninterface PumpkinCanvasAttrs {\n    mode: 'color' | 'carve'\n    brush?: BrushState\n    image?: string\n    onchange?: (value: string) => void\n}\n\nconst IMAGE_WIDTH = 426;\nconst IMAGE_HEIGHT = 426;\n\nexport default class PumpkinCanvas implements ClassComponent<PumpkinCanvasAttrs> {\n    mode!: 'color' | 'carve'\n    brush?: BrushState\n    previewContext: CanvasRenderingContext2D | null = null\n    imageSourceCanvas!: HTMLCanvasElement\n    imageSourceContext!: CanvasRenderingContext2D\n    drawCanvas!: HTMLCanvasElement\n    drawContext!: CanvasRenderingContext2D\n    onmouseup!: () => void\n    drawEnabled: boolean = false\n\n    oninit(vnode: Vnode<PumpkinCanvasAttrs, this>) {\n        this.mode = vnode.attrs.mode;\n        this.brush = vnode.attrs.brush;\n\n        this.imageSourceCanvas = document.createElement('canvas');\n        this.imageSourceCanvas.width = IMAGE_WIDTH;\n        this.imageSourceCanvas.height = IMAGE_HEIGHT;\n        this.imageSourceContext = this.imageSourceCanvas.getContext('2d')!;\n        const image = new Image();\n        image.src = app.forum.attribute('baseUrl') + '/assets/extensions/clarkwinkelmann-carving-contest/pumpkin.jpg';\n        image.onload = () => {\n            this.imageSourceContext.drawImage(image, 0, 0);\n\n            this.updatePreview();\n        };\n\n        this.drawCanvas = document.createElement('canvas');\n        this.drawCanvas.width = IMAGE_WIDTH;\n        this.drawCanvas.height = IMAGE_HEIGHT;\n        this.drawContext = this.drawCanvas.getContext('2d')!;\n\n        const startingImage = vnode.attrs.image;\n        if (startingImage) {\n            const image = new Image();\n            image.src = startingImage;\n            image.onload = () => {\n                this.drawContext.drawImage(image, 0, 0);\n\n                this.updatePreview();\n            };\n            image.onerror = err => {\n                console.error('Error loading image', err);\n            };\n        }\n\n        this.onmouseup = () => {\n            this.drawEnabled = false;\n        };\n    }\n\n    oncreate(vnode: VnodeDOM<PumpkinCanvasAttrs, this>) {\n        document.addEventListener('mouseup', this.onmouseup);\n\n        vnode.dom.addEventListener('mousedown', event => {\n            this.drawEnabled = true;\n\n            this.mouseMove(vnode, event as MouseEvent);\n        });\n        vnode.dom.addEventListener('mousemove', this.mouseMove.bind(this, vnode) as any);\n        vnode.dom.addEventListener('mouseleave', () => {\n            // To remove the tool from preview\n            this.updatePreview();\n        });\n\n        this.previewContext = vnode.dom.querySelector('canvas')!.getContext('2d');\n\n        this.updatePreview();\n    }\n\n    onremove() {\n        document.removeEventListener('mouseup', this.onmouseup);\n    }\n\n    view() {\n        return m('.CarvingContestPumpkin', m('canvas', {\n            width: IMAGE_WIDTH,\n            height: IMAGE_HEIGHT,\n        }));\n    }\n\n    mouseMove(vnode: VnodeDOM<PumpkinCanvasAttrs, this>, event: MouseEvent) {\n        const rect = (event.target as HTMLElement).getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n\n        if (this.drawEnabled && this.brush) {\n            if (this.mode === 'color' && this.brush.color) {\n                this.drawContext.fillStyle = this.brush.color;\n            } else {\n                this.drawContext.fillStyle = '#000';\n            }\n            this.drawWithTool(this.drawContext, x, y, true);\n\n            if (vnode.attrs.onchange) {\n                vnode.attrs.onchange(this.drawContext.canvas.toDataURL('image/png'));\n            }\n        }\n\n        this.updatePreview({\n            x,\n            y,\n        });\n    }\n\n    drawWithTool(context: CanvasRenderingContext2D, x: number, y: number, fill: boolean = false) {\n        if (!this.brush) {\n            return;\n        }\n\n        const width = this.brush.width;\n\n        context.beginPath();\n\n        switch (this.brush.shape) {\n            case 'circle':\n                context.arc(x, y, width / 2, 0, 2 * Math.PI);\n                break;\n            case 'square':\n                context.rect(x - (width / 2), y - (width / 2), width, width);\n                break;\n        }\n\n        if (fill) {\n            context.fill();\n        } else {\n            context.stroke();\n        }\n    }\n\n    updatePreview(toolPosition: { x: number, y: number } | null = null) {\n        if (!this.previewContext) {\n            return;\n        }\n\n        this.previewContext.clearRect(0, 0, IMAGE_WIDTH, IMAGE_HEIGHT);\n\n        if (this.mode === 'color') {\n            // In paint mode, we draw the two images on top of another\n            this.previewContext.drawImage(this.imageSourceCanvas, 0, 0);\n            this.previewContext.drawImage(this.drawCanvas, 0, 0);\n        } else {\n            // In carve mode, we subtract the drawing from the source\n            const imageSourceData = this.imageSourceContext.getImageData(0, 0, IMAGE_WIDTH, IMAGE_HEIGHT);\n            const drawData = this.drawContext.getImageData(0, 0, IMAGE_WIDTH, IMAGE_HEIGHT);\n\n            for (let i = 0; i < imageSourceData.data.length; i += 4) {\n                // If the pixel in that area has an alpha value greater than 0, we create a hole in the image data\n                // Returning 0 for every index will give rgba(0,0,0,0)\n                if (drawData.data[i + 3] > 0) {\n                    imageSourceData.data[i] = 0;\n                    imageSourceData.data[i + 1] = 0;\n                    imageSourceData.data[i + 2] = 0;\n                    imageSourceData.data[i + 3] = 0;\n                }\n            }\n\n            this.previewContext.putImageData(imageSourceData, 0, 0);\n        }\n\n        if (toolPosition) {\n            this.previewContext.strokeStyle = 'rgba(0,0,0,0.5)';\n            this.previewContext.lineWidth = 3;\n            this.drawWithTool(this.previewContext, toolPosition.x, toolPosition.y);\n        }\n    }\n}\n","export default class BrushState {\n    color: string | null = null;\n    shape: 'circle' | 'square' = 'circle';\n    width: number = 30;\n}\n","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport PumpkinCanvas from './PumpkinCanvas';\nimport BrushState from '../states/BrushState';\n\ninterface ParticipateModalAttrs {\n    onsave: () => void\n}\n\nconst translationPrefix = 'clarkwinkelmann-carving-contest.forum.modal.';\n\n// @ts-ignore Modal.view causing typescript errors\nexport default class ParticipateModal extends Modal {\n    // We cannot type-hint through extend at this time so we code it here\n    attrs!: ParticipateModalAttrs\n\n    brush: BrushState = new BrushState()\n    name: string = ''\n    image: string = ''\n    disabled: boolean = true\n    loading: boolean = false\n\n    className() {\n        return 'Modal--large';\n    }\n\n    title() {\n        return app.translator.trans(translationPrefix + 'title');\n    }\n\n    checkIfDisabled() {\n        const previouslyDisabled = this.disabled;\n\n        this.disabled = this.name === '' || this.image === '';\n\n        // Handle disabled state redraw when the image changes (because we don't redraw every time it changes)\n        if (previouslyDisabled !== this.disabled) {\n            m.redraw();\n        }\n    }\n\n    colorChoice() {\n        const colors = app.forum.attribute('carvingContestColors');\n\n        if (colors === 'all') {\n            return m('input', {\n                type: 'color',\n                value: this.brush.color,\n                onchange: (event: Event) => {\n                    this.brush.color = (event.target as HTMLInputElement).value;\n                },\n            });\n        }\n\n        let colorOptions: string[];\n\n        if (colors === 'simple') {\n            colorOptions = [\n                '#f32501', // Red\n                '#ff8d12', // Orange\n                '#ffe884', // Yellow\n                '#94ae3f', // Green\n                '#084f93', // Blue\n                '#000000', // Black\n            ];\n        } else {\n            colorOptions = app.forum.attribute('carvingContestColors').split(',');\n        }\n\n        return m('div', colorOptions.map(color => m('.CarvingContest-ColorChoice', {\n            style: {\n                backgroundColor: color,\n            },\n            onclick: () => {\n                this.brush.color = color;\n            },\n            className: this.brush.color === color ? 'selected' : '',\n        })));\n    }\n\n    colorTools() {\n        if (!app.forum.attribute('carvingContestColorMode')) {\n            return null;\n        }\n\n        return m('.CarvingContestTools', [\n            this.colorChoice(),\n        ]);\n    }\n\n    content() {\n        return m('.Modal-body', [\n            m('.Form-group', [\n                this.colorTools(),\n                m('.CarvingContestTools', [\n                    Button.component({\n                        disabled: this.brush.shape === 'circle',\n                        icon: 'fas fa-circle',\n                        className: 'Button',\n                        onclick: () => {\n                            this.brush.shape = 'circle';\n                        },\n                    }, app.translator.trans(translationPrefix + 'tools.circle')),\n                    Button.component({\n                        disabled: this.brush.shape === 'square',\n                        icon: 'fas fa-square',\n                        className: 'Button',\n                        onclick: () => {\n                            this.brush.shape = 'square';\n                        },\n                    }, app.translator.trans(translationPrefix + 'tools.square')),\n                    m('input', {\n                        type: 'range',\n                        step: 2,\n                        min: 10,\n                        max: 50,\n                        value: this.brush.width,\n                        onchange: (event: Event) => {\n                            this.brush.width = parseInt((event.target as HTMLInputElement).value);\n                        },\n                    }),\n                ]),\n                m(PumpkinCanvas, {\n                    mode: app.forum.attribute('carvingContestColorMode') ? 'color' : 'carve',\n                    brush: this.brush,\n                    image: this.image,\n                    onchange: value => {\n                        this.image = value;\n\n                        this.checkIfDisabled();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(translationPrefix + 'name')),\n                m('input[type=text].FormControl', {\n                    value: this.name,\n                    onchange: (event: Event) => {\n                        this.name = (event.target as HTMLInputElement).value;\n\n                        this.checkIfDisabled();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Button.component({\n                    loading: this.loading,\n                    disabled: this.disabled,\n                    className: 'Button Button--primary',\n                    onclick: () => {\n                        app.store.createRecord('carving-contest-entries').save({\n                            name: this.name,\n                            image: this.image,\n                        }).then(() => {\n                            this.attrs.onsave();\n                        });\n                    },\n                }, app.translator.trans(translationPrefix + 'submit')),\n            ]),\n        ]);\n    }\n}\n","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Link from 'flarum/common/components/Link';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\nimport Entry from '../models/Entry';\n\ninterface ModalAttrs {\n    entry: Entry\n}\n\n// @ts-ignore Modal.view causing typescript errors\nexport default class PostLikesModal extends Modal {\n    // We cannot type-hint through extend at this time so we code it here\n    attrs!: ModalAttrs\n\n    className() {\n        return 'EntryLikesModal Modal--small';\n    }\n\n    title() {\n        return app.translator.trans('clarkwinkelmann-carving-contest.forum.likes_modal.title');\n    }\n\n    content() {\n        return m('.Modal-body', m('ul.EntryLikesModal-list', (this.attrs.entry.likes() || []).map(user => m('li', m(Link, {\n            href: app.route.user(user),\n        }, [\n            avatar(user),\n            ' ',\n            username(user),\n        ])))));\n    }\n}\n","import {Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Link from 'flarum/common/components/Link';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\nimport icon from 'flarum/common/helpers/icon';\nimport punctuateSeries from 'flarum/common/helpers/punctuateSeries';\nimport extractText from 'flarum/common/utils/extractText';\nimport ParticipateModal from './ParticipateModal';\nimport PumpkinCanvas from './PumpkinCanvas';\nimport EntryLikesModal from './EntryLikesModal';\nimport Entry from '../models/Entry';\n\ninterface SortOptions {\n    '-likesCount': string\n    'likesCount': string\n    '-createdAt': string\n    'createdAt': string\n}\n\nconst translationPrefix = 'clarkwinkelmann-carving-contest.forum.page.';\n\nexport default class ContestPage extends Page {\n    loading: boolean = true\n    moreResults: boolean = false\n    entries: Entry[] | null = null\n    sort: keyof SortOptions = '-createdAt'\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.refresh();\n    }\n\n    loadResults(offset: number) {\n        const preloadedEntries = app.preloadedApiDocument();\n\n        if (preloadedEntries) {\n            return Promise.resolve(preloadedEntries);\n        } else {\n            return app.store.find('carving-contest/entries', {\n                page: {\n                    offset,\n                },\n                sort: this.sort,\n            });\n        }\n    }\n\n    refresh() {\n        this.loading = true;\n        this.entries = null;\n\n        return this.loadResults(0).then(\n            results => {\n                this.entries = [];\n                this.parseResults(results);\n            },\n            () => {\n                this.loading = false;\n                m.redraw();\n            }\n        );\n    }\n\n    loadMore() {\n        this.loading = true;\n\n        this.loadResults(this.entries!.length)\n            .then(this.parseResults.bind(this));\n    }\n\n    parseResults(results: any) {\n        [].push.apply(this.entries, results);\n\n        this.loading = false;\n        this.moreResults = !!results.payload.links.next;\n\n        m.redraw();\n    }\n\n    likeButton(entry: Entry) {\n        if (!entry.canLike()) {\n            return null;\n        }\n\n        const likes = entry.likes();\n        const isLiked = app.session.user && likes && likes.some(user => user === app.session.user);\n\n        return Button.component({\n            className: 'Button Button--block' + (isLiked ? ' Button--primary Button-already-liked' : ''),\n            onclick: () => {\n                entry.save({\n                    isLiked: !isLiked,\n                });\n\n                // We've saved the fact that we do or don't like the entry, but in order\n                // to provide instantaneous feedback to the user, we'll need to add or\n                // remove the like from the relationship data manually.\n                const data = (entry.data as any).relationships.likes.data as { type: string, id: string }[];\n                data.some((like, i) => {\n                    if (like.id === app.session.user.id()) {\n                        data.splice(i, 1);\n                        return true;\n                    }\n\n                    return false;\n                });\n\n                if (!isLiked) {\n                    data.unshift({type: 'users', id: app.session.user.id()});\n                }\n            }\n        }, (isLiked ? [\n            m('span.already-liked', [\n                icon('far fa-thumbs-up'),\n                ' ',\n                app.translator.trans(translationPrefix + 'already-liked'),\n            ]),\n            m('span.remove-like', [\n                icon('far fa-thumbs-down'),\n                ' ',\n                app.translator.trans(translationPrefix + 'unlike'),\n            ])\n        ] : [\n            icon('far fa-thumbs-up'),\n            ' ',\n            app.translator.trans(translationPrefix + 'like'),\n        ]) as any);\n    }\n\n    whoLiked(entry: Entry) {\n        const likes = entry.likes();\n\n        if (!likes || !likes.length) {\n            return;\n        }\n\n        const limit = 4;\n        const overLimit = likes.length > limit;\n\n        // Construct a list of names of users who have liked this post. Make sure the\n        // current user is first in the list, and cap a maximum of 4 items.\n        const names = likes.sort(a => a === app.session.user ? -1 : 1)\n            .slice(0, overLimit ? limit - 1 : limit)\n            .map(user => m(Link, {\n                href: app.route.user(user),\n            }, user === app.session.user ? app.translator.trans('flarum-likes.forum.post.you_text') : username(user)));\n\n        // If there are more users that we've run out of room to display, add a \"x\n        // others\" name to the end of the list. Clicking on it will display a modal\n        // with a full list of names.\n        if (overLimit) {\n            const count = likes.length - names.length;\n\n            names.push(m('a', {\n                href: '#',\n                onclick: (event: Event) => {\n                    event.preventDefault();\n                    app.modal.show(EntryLikesModal, {\n                        entry,\n                    });\n                },\n            }, app.translator.trans('flarum-likes.forum.post.others_link', {count})));\n        }\n\n        return m('.Entry-likedBy', [\n            icon('far fa-thumbs-up'),\n            app.translator.trans('flarum-likes.forum.post.liked_by' + (likes[0] === app.session.user ? '_self' : '') + '_text', {\n                count: names.length,\n                users: punctuateSeries(names),\n            }),\n        ]);\n    }\n\n    participateButton() {\n        if (!app.session.user) {\n            return null;\n        }\n\n        if (app.session.user.attribute('carvingContestCanParticipate')) {\n            return Button.component({\n                className: 'Button Button--primary',\n                onclick: () => {\n                    app.modal.show(ParticipateModal, {\n                        onsave: () => {\n                            app.modal.close();\n                            this.refresh();\n                        },\n                    });\n                },\n            }, app.translator.trans(translationPrefix + 'participate'));\n        }\n\n        if (app.session.user.attribute('carvingContestCouldParticipate')) {\n            return Button.component({\n                className: 'Button Button--primary',\n                disabled: true,\n            }, app.translator.trans(translationPrefix + 'already-participated'));\n        }\n\n        return null;\n    }\n\n    view() {\n        if (this.entries === null) {\n            return m('.container', m('p', app.translator.trans(translationPrefix + 'loading')));\n        }\n\n        const sortOptions: SortOptions = {\n            '-likesCount': app.translator.trans(translationPrefix + 'sort.mostLikes'),\n            'likesCount': app.translator.trans(translationPrefix + 'sort.fewerLikes'),\n            '-createdAt': app.translator.trans(translationPrefix + 'sort.mostRecent'),\n            'createdAt': app.translator.trans(translationPrefix + 'sort.leastRecent'),\n        };\n\n        return m('.container', [\n            m('h2', app.translator.trans(translationPrefix + 'title')),\n            this.participateButton(),\n            ' ',\n            Dropdown.component({\n                buttonClassName: 'Button',\n                label: sortOptions[this.sort],\n            }, (Object.keys(sortOptions) as (keyof SortOptions)[]).map(value => {\n                const label = sortOptions[value];\n                const active = this.sort === value;\n\n                return Button.component({\n                    icon: active ? 'fas fa-check' : true,\n                    onclick: () => {\n                        this.sort = value;\n                        this.refresh();\n                    },\n                    active,\n                }, label as any);\n            }) as any),\n            ' ',\n            Button.component({\n                icon: 'fas fa-sync',\n                className: 'Button',\n                onclick: () => {\n                    this.refresh();\n                },\n            }, app.translator.trans(translationPrefix + 'refresh')),\n            m('div', this.entries.map(entry => m('.CarvingContestEntry', {\n                key: entry.id(), // Without this, canvas are re-used, causing incorrect images to be shown when one is deleted\n            }, [\n                m(PumpkinCanvas, {\n                    mode: app.forum.attribute('carvingContestColorMode') ? 'color' : 'carve',\n                    image: entry.image(),\n                }),\n                m('h3.CarvingContestEntry--name', entry.name()),\n                m('p', [\n                    avatar(entry.user()),\n                    username(entry.user()),\n                    ' - ',\n                    humanTime(entry.createdAt()),\n                ]),\n                app.forum.attribute('carvingContestCanModerate') ? Button.component({\n                    className: 'Button Button--icon CarvingContestEntry--delete',\n                    icon: 'fas fa-trash',\n                    onclick: () => {\n                        if (!confirm(extractText(app.translator.trans(translationPrefix + 'delete-confirmation', {\n                            name: entry.name(),\n                            user: entry.user(),\n                        })))) {\n                            return;\n                        }\n\n                        // @ts-ignore Flarum typings expect delete() parameters\n                        entry.delete().then(() => {\n                            this.refresh();\n                        });\n                    },\n                }) : null,\n                m('.CarvingContestEntry--vote', [\n                    this.likeButton(entry),\n                    this.whoLiked(entry),\n                ]),\n            ]))),\n            this.loading ? LoadingIndicator.component() : (this.moreResults ? Button.component({\n                className: 'Button',\n                onclick: this.loadMore.bind(this),\n            }, app.translator.trans(translationPrefix + 'load-more')) : null),\n        ]);\n    }\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Entry from './models/Entry';\nimport ContestPage from './components/ContestPage';\n\napp.initializers.add('carving-contest', () => {\n    app.store.models['carving-contest-entries'] = Entry;\n\n    app.routes.carvingContest = {\n        path: '/carving-contest',\n        component: ContestPage,\n    };\n\n    extend(IndexPage.prototype, 'navItems', function (items: ItemList) {\n        if (!app.forum.attribute('carvingContestCanView')) {\n            return;\n        }\n\n        items.add('carving-contest', LinkButton.component({\n            icon: 'fas fa-spider',\n            href: app.route('carvingContest'),\n        }, app.translator.trans('clarkwinkelmann-carving-contest.forum.nav.contest')));\n    });\n});\n"],"sourceRoot":""}