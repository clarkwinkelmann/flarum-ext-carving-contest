{"version":3,"sources":["webpack://@clarkwinkelmann/carving-contest/webpack/bootstrap","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['app']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/Model']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/helpers/username']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/Link']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/helpers/avatar']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/Modal']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/LinkButton']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/Page']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/helpers/punctuateSeries']\"","webpack://@clarkwinkelmann/carving-contest/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/carving-contest/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@clarkwinkelmann/carving-contest/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/carving-contest/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/carving-contest/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@clarkwinkelmann/carving-contest/./src/forum/models/Entry.js","webpack://@clarkwinkelmann/carving-contest/./src/forum/components/PumpkinCanvas.js","webpack://@clarkwinkelmann/carving-contest/./src/forum/states/BrushState.js","webpack://@clarkwinkelmann/carving-contest/./src/forum/components/ParticipateModal.js","webpack://@clarkwinkelmann/carving-contest/./src/forum/components/EntryLikesModal.js","webpack://@clarkwinkelmann/carving-contest/./src/forum/components/ContestPage.js","webpack://@clarkwinkelmann/carving-contest/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","_defineProperty","obj","configurable","writable","Entry","Model","attribute","transformDate","hasOne","hasMany","apiEndpoint","this","exists","data","id","PumpkinCanvas","oninit","vnode","attrs","brush","previewContext","imageSourceCanvas","document","createElement","width","height","imageSourceContext","getContext","image","Image","src","app","forum","onload","drawImage","updatePreview","drawCanvas","drawContext","startingImage","onerror","err","console","error","onmouseup","drawEnabled","oncreate","addEventListener","dom","event","mouseMove","querySelector","onremove","removeEventListener","view","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","fillStyle","color","drawWithTool","onchange","canvas","toDataURL","context","fill","beginPath","shape","arc","Math","PI","stroke","toolPosition","clearRect","imageSourceData","getImageData","drawData","length","putImageData","strokeStyle","lineWidth","BrushState","translationPrefix","ParticipateModal","className","title","translator","trans","checkIfDisabled","previouslyDisabled","disabled","redraw","colorChoice","colorOptions","colors","type","split","map","style","backgroundColor","onclick","colorTools","content","Button","component","icon","step","min","max","parseInt","loading","store","createRecord","save","then","onsave","Modal","PostLikesModal","entry","likes","user","Link","href","route","avatar","username","ContestPage","moreResults","entries","sort","refresh","loadResults","offset","preloadedEntries","preloadedApiDocument","Promise","resolve","find","page","results","parseResults","loadMore","push","apply","payload","links","next","likeButton","canLike","isLiked","session","some","relationships","like","splice","unshift","whoLiked","overLimit","names","a","slice","limit","count","e","preventDefault","modal","show","EntryLikesModal","transChoice","users","punctuateSeries","participateButton","close","sortOptions","Dropdown","buttonClassName","label","keys","active","humanTime","createdAt","confirm","extractText","LoadingIndicator","Page","initializers","add","models","routes","carvingContest","path","extend","IndexPage","items","LinkButton"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['common/helpers/avatar'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['forum/components/IndexPage'];","module.exports = flarum.core.compat['common/components/LinkButton'];","module.exports = flarum.core.compat['common/components/Page'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['common/helpers/humanTime'];","module.exports = flarum.core.compat['common/helpers/punctuateSeries'];","module.exports = flarum.core.compat['common/utils/extractText'];","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import Model from 'flarum/common/Model';\n\nexport default class Entry extends Model {\n    name = Model.attribute('name');\n    image = Model.attribute('image');\n    createdAt = Model.attribute('createdAt', Model.transformDate);\n    canLike = Model.attribute('canLike');\n\n    user = Model.hasOne('user');\n    likes = Model.hasMany('likes');\n\n    apiEndpoint() {\n        return '/carving-contest/entries' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import app from 'flarum/app';\n\n/* global m */\n\nconst IMAGE_WIDTH = 426;\nconst IMAGE_HEIGHT = 426;\n\nexport default class PumpkinCanvas {\n    oninit(vnode) {\n        this.mode = vnode.attrs.mode;\n        this.brush = vnode.attrs.brush;\n\n        this.previewContext = null;\n\n        this.imageSourceCanvas = document.createElement('canvas');\n        this.imageSourceCanvas.width = IMAGE_WIDTH;\n        this.imageSourceCanvas.height = IMAGE_HEIGHT;\n        this.imageSourceContext = this.imageSourceCanvas.getContext('2d');\n        const image = new Image();\n        image.src = app.forum.attribute('baseUrl') + '/assets/extensions/clarkwinkelmann-carving-contest/pumpkin.jpg';\n        image.onload = () => {\n            this.imageSourceContext.drawImage(image, 0, 0);\n\n            this.updatePreview();\n        };\n\n        this.drawCanvas = document.createElement('canvas');\n        this.drawCanvas.width = IMAGE_WIDTH;\n        this.drawCanvas.height = IMAGE_HEIGHT;\n        this.drawContext = this.drawCanvas.getContext('2d');\n\n        const startingImage = vnode.attrs.image;\n        if (startingImage) {\n            const image = new Image();\n            image.src = startingImage;\n            image.onload = () => {\n                this.drawContext.drawImage(image, 0, 0);\n\n                this.updatePreview();\n            };\n            image.onerror = err => {\n                console.error('Error loading image', err);\n            };\n        }\n\n        this.onmouseup = () => {\n            this.drawEnabled = false;\n        };\n    }\n\n    oncreate(vnode) {\n        document.addEventListener('mouseup', this.onmouseup);\n\n        vnode.dom.addEventListener('mousedown', event => {\n            this.drawEnabled = true;\n\n            this.mouseMove(vnode, event);\n        });\n        vnode.dom.addEventListener('mousemove', this.mouseMove.bind(this, vnode));\n        vnode.dom.addEventListener('mouseleave', () => {\n            // To remove the tool from preview\n            this.updatePreview();\n        });\n\n        this.previewContext = vnode.dom.querySelector('canvas').getContext('2d');\n\n        this.updatePreview();\n    }\n\n    onremove() {\n        document.removeEventListener('mouseup', this.onmouseup);\n    }\n\n    view() {\n        return m('.CarvingContestPumpkin', m('canvas', {\n            width: IMAGE_WIDTH,\n            height: IMAGE_HEIGHT,\n        }));\n    }\n\n    mouseMove(vnode, event) {\n        const rect = event.target.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n\n        if (this.drawEnabled && this.brush) {\n            if (this.mode === 'color') {\n                this.drawContext.fillStyle = this.brush.color;\n            } else {\n                this.drawContext.fillStyle = '#000';\n            }\n            this.drawWithTool(this.drawContext, x, y, true);\n\n            vnode.attrs.onchange(this.drawContext.canvas.toDataURL('image/png'));\n        }\n\n        this.updatePreview({\n            x,\n            y,\n        });\n    }\n\n    drawWithTool(context, x, y, fill = false) {\n        if (!this.brush) {\n            return;\n        }\n\n        const width = this.brush.width;\n\n        context.beginPath();\n\n        switch (this.brush.shape) {\n            case 'circle':\n                context.arc(x, y, width / 2, 0, 2 * Math.PI);\n                break;\n            case 'square':\n                context.rect(x - (width / 2), y - (width / 2), width, width);\n                break;\n        }\n\n        if (fill) {\n            context.fill();\n        } else {\n            context.stroke();\n        }\n    }\n\n    updatePreview(toolPosition = null) {\n        if (!this.previewContext) {\n            return;\n        }\n\n        this.previewContext.clearRect(0, 0, IMAGE_WIDTH, IMAGE_HEIGHT);\n\n        if (this.mode === 'color') {\n            // In paint mode, we draw the two images on top of another\n            this.previewContext.drawImage(this.imageSourceCanvas, 0, 0);\n            this.previewContext.drawImage(this.drawCanvas, 0, 0);\n        } else {\n            // In carve mode, we subtract the drawing from the source\n            const imageSourceData = this.imageSourceContext.getImageData(0, 0, IMAGE_WIDTH, IMAGE_HEIGHT);\n            const drawData = this.drawContext.getImageData(0, 0, IMAGE_WIDTH, IMAGE_HEIGHT);\n\n            for (let i = 0; i < imageSourceData.data.length; i += 4) {\n                // If the pixel in that area has an alpha value greater than 0, we create a hole in the image data\n                // Returning 0 for every index will give rgba(0,0,0,0)\n                if (drawData.data[i + 3] > 0) {\n                    imageSourceData.data[i] = 0;\n                    imageSourceData.data[i + 1] = 0;\n                    imageSourceData.data[i + 2] = 0;\n                    imageSourceData.data[i + 3] = 0;\n                }\n            }\n\n            this.previewContext.putImageData(imageSourceData, 0, 0);\n        }\n\n        if (toolPosition) {\n            this.previewContext.strokeStyle = 'rgba(0,0,0,0.5)';\n            this.previewContext.lineWidth = 3;\n            this.drawWithTool(this.previewContext, toolPosition.x, toolPosition.y);\n        }\n    }\n}\n","export default class BrushState {\n    color = null;\n    shape = 'circle';\n    width = 30;\n}\n","import app from 'flarum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport PumpkinCanvas from './PumpkinCanvas';\nimport BrushState from '../states/BrushState';\n\nconst translationPrefix = 'clarkwinkelmann-carving-contest.forum.modal.';\n\n/* global m */\n\nexport default class ParticipateModal extends Modal {\n    brush = new BrushState();\n    name = '';\n    image = '';\n    disabled = true;\n    loading = false;\n\n    className() {\n        return 'Modal--large';\n    }\n\n    title() {\n        return app.translator.trans(translationPrefix + 'title');\n    }\n\n    checkIfDisabled() {\n        const previouslyDisabled = this.disabled;\n\n        this.disabled = this.name === '' || this.image === '';\n\n        // Handle disabled state redraw when the image changes (because we don't redraw every time it changes)\n        if (previouslyDisabled !== this.disabled) {\n            m.redraw();\n        }\n    }\n\n    colorChoice() {\n        const colors = app.forum.attribute('carvingContestColors');\n\n        if (colors === 'all') {\n            return m('input', {\n                type: 'color',\n                value: this.brush.color,\n                onchange: event => {\n                    this.brush.color = event.target.value;\n                },\n            });\n        }\n\n        let colorOptions;\n\n        if (colors === 'simple') {\n            colorOptions = [\n                '#f32501', // Red\n                '#ff8d12', // Orange\n                '#ffe884', // Yellow\n                '#94ae3f', // Green\n                '#084f93', // Blue\n                '#000000', // Black\n            ];\n        } else {\n            colorOptions = app.forum.attribute('carvingContestColors').split(',');\n        }\n\n        return m('div', colorOptions.map(color => m('.CarvingContest-ColorChoice', {\n            style: {\n                backgroundColor: color,\n            },\n            onclick: () => {\n                this.brush.color = color;\n            },\n            className: this.brush.color === color ? 'selected' : '',\n        })));\n    }\n\n    colorTools() {\n        if (!app.forum.attribute('carvingContestColorMode')) {\n            return null;\n        }\n\n        return m('.CarvingContestTools', [\n            this.colorChoice(),\n        ]);\n    }\n\n    content() {\n        return m('.Modal-body', [\n            m('.Form-group', [\n                this.colorTools(),\n                m('.CarvingContestTools', [\n                    Button.component({\n                        disabled: this.brush.shape === 'circle',\n                        icon: 'fas fa-circle',\n                        className: 'Button',\n                        onclick: () => {\n                            this.brush.shape = 'circle';\n                        },\n                    }, app.translator.trans(translationPrefix + 'tools.circle')),\n                    Button.component({\n                        disabled: this.brush.shape === 'square',\n                        icon: 'fas fa-square',\n                        className: 'Button',\n                        onclick: () => {\n                            this.brush.shape = 'square';\n                        },\n                    }, app.translator.trans(translationPrefix + 'tools.square')),\n                    m('input', {\n                        type: 'range',\n                        step: 2,\n                        min: 10,\n                        max: 50,\n                        value: this.brush.width,\n                        onchange: event => {\n                            this.brush.width = parseInt(event.target.value);\n                        },\n                    }),\n                ]),\n                m(PumpkinCanvas, {\n                    mode: app.forum.attribute('carvingContestColorMode') ? 'color' : 'carve',\n                    brush: this.brush,\n                    image: this.image,\n                    onchange: value => {\n                        this.image = value;\n\n                        this.checkIfDisabled();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans(translationPrefix + 'name')),\n                m('input[type=text].FormControl', {\n                    value: this.name,\n                    onchange: event => {\n                        this.name = event.target.value;\n\n                        this.checkIfDisabled();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Button.component({\n                    loading: this.loading,\n                    disabled: this.disabled,\n                    className: 'Button Button--primary',\n                    onclick: () => {\n                        app.store.createRecord('carving-contest-entries').save({\n                            name: this.name,\n                            image: this.image,\n                        }).then(() => {\n                            this.attrs.onsave();\n                        });\n                    },\n                }, app.translator.trans(translationPrefix + 'submit')),\n            ]),\n        ]);\n    }\n}\n","import app from 'flarum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Link from 'flarum/common/components/Link';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\n\n/* global m */\n\nexport default class PostLikesModal extends Modal {\n    className() {\n        return 'EntryLikesModal Modal--small';\n    }\n\n    title() {\n        return app.translator.trans('clarkwinkelmann-carving-contest.forum.likes_modal.title');\n    }\n\n    content() {\n        return m('.Modal-body', m('ul.EntryLikesModal-list', this.attrs.entry.likes().map(user => m('li', m(Link, {\n            href: app.route.user(user),\n        }, [\n            avatar(user),\n            ' ',\n            username(user),\n        ])))));\n    }\n}\n","import app from 'flarum/app';\nimport Page from 'flarum/common/components/Page';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Link from 'flarum/common/components/Link';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\nimport icon from 'flarum/common/helpers/icon';\nimport punctuateSeries from 'flarum/common/helpers/punctuateSeries';\nimport extractText from 'flarum/common/utils/extractText';\nimport ParticipateModal from './ParticipateModal';\nimport PumpkinCanvas from './PumpkinCanvas';\nimport EntryLikesModal from './EntryLikesModal';\n\n/* global m */\n\nconst translationPrefix = 'clarkwinkelmann-carving-contest.forum.page.';\n\nexport default class ContestPage extends Page {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.loading = true;\n        this.moreResults = false;\n        this.entries = [];\n        this.sort = '-createdAt';\n\n        this.refresh();\n    }\n\n    loadResults(offset) {\n        const preloadedEntries = app.preloadedApiDocument();\n\n        if (preloadedEntries) {\n            return Promise.resolve(preloadedEntries);\n        } else {\n            return app.store.find('carving-contest/entries', {\n                page: {\n                    offset,\n                },\n                sort: this.sort,\n            });\n        }\n    }\n\n    refresh() {\n        this.loading = true;\n        this.entries = null;\n\n        return this.loadResults().then(\n            results => {\n                this.entries = [];\n                this.parseResults(results);\n            },\n            () => {\n                this.loading = false;\n                m.redraw();\n            }\n        );\n    }\n\n    loadMore() {\n        this.loading = true;\n\n        this.loadResults(this.entries.length)\n            .then(this.parseResults.bind(this));\n    }\n\n    parseResults(results) {\n        [].push.apply(this.entries, results);\n\n        this.loading = false;\n        this.moreResults = !!results.payload.links.next;\n\n        m.redraw();\n    }\n\n    likeButton(entry) {\n        if (!entry.canLike()) {\n            return null;\n        }\n\n        const likes = entry.likes();\n        const isLiked = app.session.user && likes && likes.some(user => user === app.session.user);\n\n        return Button.component({\n            className: 'Button Button--block' + (isLiked ? ' Button--primary Button-already-liked' : ''),\n            onclick: () => {\n                entry.save({\n                    isLiked: !isLiked,\n                });\n\n                // We've saved the fact that we do or don't like the entry, but in order\n                // to provide instantaneous feedback to the user, we'll need to add or\n                // remove the like from the relationship data manually.\n                const data = entry.data.relationships.likes.data;\n                data.some((like, i) => {\n                    if (like.id === app.session.user.id()) {\n                        data.splice(i, 1);\n                        return true;\n                    }\n                });\n\n                if (!isLiked) {\n                    data.unshift({type: 'users', id: app.session.user.id()});\n                }\n            }\n        }, isLiked ? [\n            m('span.already-liked', [\n                icon('far fa-thumbs-up'),\n                ' ',\n                app.translator.trans(translationPrefix + 'already-liked'),\n            ]),\n            m('span.remove-like', [\n                icon('far fa-thumbs-down'),\n                ' ',\n                app.translator.trans(translationPrefix + 'unlike'),\n            ])\n        ] : [\n            icon('far fa-thumbs-up'),\n            ' ',\n            app.translator.trans(translationPrefix + 'like'),\n        ]);\n    }\n\n    whoLiked(entry) {\n        const likes = entry.likes();\n\n        if (!likes || !likes.length) {\n            return;\n        }\n\n        const limit = 4;\n        const overLimit = likes.length > limit;\n\n        // Construct a list of names of users who have liked this post. Make sure the\n        // current user is first in the list, and cap a maximum of 4 items.\n        const names = likes.sort(a => a === app.session.user ? -1 : 1)\n            .slice(0, overLimit ? limit - 1 : limit)\n            .map(user => m(Link, {\n                href: app.route.user(user),\n            }, user === app.session.user ? app.translator.trans('flarum-likes.forum.post.you_text') : username(user)));\n\n        // If there are more users that we've run out of room to display, add a \"x\n        // others\" name to the end of the list. Clicking on it will display a modal\n        // with a full list of names.\n        if (overLimit) {\n            const count = likes.length - names.length;\n\n            names.push(m('a', {\n                href: '#',\n                onclick: e => {\n                    e.preventDefault();\n                    app.modal.show(EntryLikesModal, {\n                        entry,\n                    });\n                },\n            }, app.translator.transChoice('flarum-likes.forum.post.others_link', count, {count})));\n        }\n\n        return m('.Entry-likedBy', [\n            icon('far fa-thumbs-up'),\n            app.translator.transChoice('flarum-likes.forum.post.liked_by' + (likes[0] === app.session.user ? '_self' : '') + '_text', names.length, {\n                count: names.length,\n                users: punctuateSeries(names)\n            }),\n        ]);\n    }\n\n    participateButton() {\n        if (!app.session.user) {\n            return null;\n        }\n\n        if (app.session.user.attribute('carvingContestCanParticipate')) {\n            return Button.component({\n                className: 'Button Button--primary',\n                onclick: () => {\n                    app.modal.show(ParticipateModal, {\n                        onsave: () => {\n                            app.modal.close();\n                            this.refresh();\n                        },\n                    });\n                },\n            }, app.translator.trans(translationPrefix + 'participate'));\n        }\n\n        if (app.session.user.attribute('carvingContestCouldParticipate')) {\n            return Button.component({\n                className: 'Button Button--primary',\n                disabled: true,\n            }, app.translator.trans(translationPrefix + 'already-participated'));\n        }\n\n        return null;\n    }\n\n    view() {\n        if (this.entries === null) {\n            return m('.container', m('p', app.translator.trans(translationPrefix + 'loading')));\n        }\n\n        const sortOptions = {\n            '-likesCount': app.translator.trans(translationPrefix + 'sort.mostLikes'),\n            'likesCount': app.translator.trans(translationPrefix + 'sort.fewerLikes'),\n            '-createdAt': app.translator.trans(translationPrefix + 'sort.mostRecent'),\n            'createdAt': app.translator.trans(translationPrefix + 'sort.leastRecent'),\n        };\n\n        return m('.container', [\n            m('h2', app.translator.trans(translationPrefix + 'title')),\n            this.participateButton(),\n            ' ',\n            Dropdown.component({\n                buttonClassName: 'Button',\n                label: sortOptions[this.sort],\n            }, Object.keys(sortOptions).map(value => {\n                const label = sortOptions[value];\n                const active = this.sort === value;\n\n                return Button.component({\n                    icon: active ? 'fas fa-check' : true,\n                    onclick: () => {\n                        this.sort = value;\n                        this.refresh();\n                    },\n                    active,\n                }, label);\n            })),\n            ' ',\n            Button.component({\n                icon: 'fas fa-sync',\n                className: 'Button',\n                onclick: () => {\n                    this.refresh();\n                },\n            }, app.translator.trans(translationPrefix + 'refresh')),\n            m('div', this.entries.map(entry => m('.CarvingContestEntry', {\n                key: entry.id(), // Without this, canvas are re-used, causing incorrect images to be shown when one is deleted\n            }, [\n                m(PumpkinCanvas, {\n                    mode: app.forum.attribute('carvingContestColorMode') ? 'color' : 'carve',\n                    image: entry.image(),\n                }),\n                m('h3.CarvingContestEntry--name', entry.name()),\n                m('p', [\n                    avatar(entry.user()),\n                    username(entry.user()),\n                    ' - ',\n                    humanTime(entry.createdAt()),\n                ]),\n                app.forum.attribute('carvingContestCanModerate') ? Button.component({\n                    className: 'Button Button--icon CarvingContestEntry--delete',\n                    icon: 'fas fa-trash',\n                    onclick: () => {\n                        if (!confirm(extractText(app.translator.trans(translationPrefix + 'delete-confirmation', {\n                            name: entry.name(),\n                            user: entry.user(),\n                        })))) {\n                            return;\n                        }\n\n                        entry.delete().then(() => {\n                            this.refresh();\n                        });\n                    },\n                }) : null,\n                m('.CarvingContestEntry--vote', [\n                    this.likeButton(entry),\n                    this.whoLiked(entry),\n                ]),\n            ]))),\n            this.loading ? LoadingIndicator.component() : (this.moreResults ? Button.component({\n                className: 'Button',\n                onclick: this.loadMore.bind(this),\n            }, app.translator.trans(translationPrefix + 'load-more')) : null),\n        ]);\n    }\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/app';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport Entry from './models/Entry';\nimport ContestPage from './components/ContestPage';\n\n/* global m */\n\napp.initializers.add('carving-contest', () => {\n    app.store.models['carving-contest-entries'] = Entry;\n\n    app.routes.carvingContest = {\n        path: '/carving-contest',\n        component: ContestPage,\n    };\n\n    extend(IndexPage.prototype, 'navItems', function (items) {\n        if (!app.forum.attribute('carvingContestCanView')) {\n            return;\n        }\n\n        items.add('carving-contest', LinkButton.component({\n            icon: 'fas fa-spider',\n            href: app.route('carvingContest'),\n        }, app.translator.trans('clarkwinkelmann-carving-contest.forum.nav.contest')));\n    });\n});\n"],"sourceRoot":""}